package templates

import (
    "knovault/internal/themes/core/Dark/templates/layout"
    "knovault/internal/plugins"
)

templ Playground() {
    @layout.Base("Playground") {
        <div>
            <h1>Playground</h1>

            <h2>Hello World Plugin Output:</h2>
            if plugin, ok := plugins.GetPlugin("HelloWorld"); ok {
                if response, err := plugin.TemplResponse(); err == nil {
                    @response
                } else {
                    <p>Error: { err.Error() }</p>
                }
            } else {
                <p>HelloWorld plugin not found</p>
            }

            <hr /><hr /><hr />

            <h2>Card Creator Plugin:</h2>
            if plugin, ok := plugins.GetPlugin("CardCreator"); ok {
                if response, err := plugin.TemplResponse(); err == nil {
                    @response
                } else {
                    <p>Error: { err.Error() }</p>
                }
            } else {
                <p>CardCreator plugin not found</p>
            }

            <hr /><hr /><hr />

            <h2>Custom CSS:</h2>
            if plugin, ok := plugins.GetPlugin("CustomCSS"); ok {
                if response, err := plugin.TemplResponse(); err == nil {
                    @response
                } else {
                    <p>Error: { err.Error() }</p>
                }
            } else {
                <p>CustomCSS plugin not found</p>
            }

            <h2>Theme Changer Plugin:</h2>
            if plugin, ok := plugins.GetPlugin("ThemeChanger"); ok {
                if response, err := plugin.TemplResponse(); err == nil {
                    @response
                } else {
                    <p>Error: { err.Error() }</p>
                }
            } else {
                <p>ThemeChanger plugin not found</p>
            }

            <h2>File Manager Plugin:</h2>
            if plugin, ok := plugins.GetPlugin("FileManager"); ok {
                if response, err := plugin.Execute(nil); err == nil {
                    if files, ok := response.([]string); ok {
                        <ul>
                            for _, file := range files {
                                <li><a href={ templ.URL("/docs/" + file) }>{file}</a></li>
                            }
                        </ul>
                    } else {
                        <p>Unexpected response type from FileManager plugin</p>
                    }
                } else {
                    <p>Error: { err.Error() }</p>
                }
            } else {
                <p>FileManager plugin not found</p>
            }

            <h2>Markdown Parser Plugin:</h2>
            if plugin, ok := plugins.GetPlugin("Parser"); ok {
                if response, err := plugin.Execute(map[string]string{"filePath": "example_markdown.md"}); err == nil {
                    if templComponent, ok := response.(templ.Component); ok {
                        @templComponent
                    } else {
                        <p>Unexpected response type from Parser plugin</p>
                    }
                } else {
                    <p>Error: { err.Error() }</p>
                }
            } else {
                <p>Parser plugin not found</p>
            }

        </div>
    }
}